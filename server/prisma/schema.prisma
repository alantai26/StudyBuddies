generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  sessions  Session[]
  messages  Message[]

  sections  Section[]

  bio       String?
  socials   Json? 
  
  conversationsA Conversation[] @relation("UserA")
  conversationsB Conversation[] @relation("UserB")
  sentMessages   PrivateMessage[]
} 

model Conversation {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())

  userAId       String
  userBId       String
  userA         User     @relation("UserA", fields: [userAId], references: [id])
  userB         User     @relation("UserB", fields: [userBId], references: [id])
  
  messages      PrivateMessage[]

  @@unique([userAId, userBId]) // Ensures there's only one conversation per pair of users
}

model PrivateMessage {
  id              String   @id @default(cuid())
  content         String
  createdAt       DateTime @default(now())

  conversation    Conversation @relation(fields: [conversationId], references: [id])
  conversationId  String

  sender          User     @relation(fields: [senderId], references: [id])
  senderId        String

  @@index([conversationId])
}

model Course {
  id         String    @id @default(cuid())
  courseCode String    @unique // e.g., "CS3500"
  name       String    // e.g., "Object-Oriented Design"
  
  sections   Section[]
}

model Section {
  id       String   @id @default(cuid())
  crn      String   @unique
  
  course   Course   @relation(fields: [courseId], references: [id])
  courseId String

  students User[]
}

model Session {
  id        String    @id @default(cuid())
  topic     String
  createdAt DateTime  @default(now())
  creator   User      @relation(fields: [creatorId], references: [id])
  creatorId String
  messages  Message[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
}
